/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.CellApi = factory(root.ApiDocumentation.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The CellApi model module.
   * @module model/CellApi
   * @version 1.0
   */

  /**
   * Constructs a new <code>CellApi</code>.
   * @alias module:model/CellApi
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>CellApi</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CellApi} obj Optional instance to populate.
   * @return {module:model/CellApi} The populated <code>CellApi</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('column')) {
        obj['column'] = ApiClient.convertToType(data['column'], 'Number');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('row')) {
        obj['row'] = ApiClient.convertToType(data['row'], 'Number');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('visibleValue')) {
        obj['visibleValue'] = ApiClient.convertToType(data['visibleValue'], 'String');
      }
    }
    return obj;
  }

  /**
   * The cell column position
   * @member {Number} column
   */
  exports.prototype['column'] = undefined;
  /**
   * The cell ID
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The cell row position
   * @member {Number} row
   */
  exports.prototype['row'] = undefined;
  /**
   * The cell status
   * @member {module:model/CellApi.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The value visible for UI
   * @member {String} visibleValue
   */
  exports.prototype['visibleValue'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "OPENED"
     * @const
     */
    "OPENED": "OPENED",
    /**
     * value: "CLOSED"
     * @const
     */
    "CLOSED": "CLOSED",
    /**
     * value: "MARKED"
     * @const
     */
    "MARKED": "MARKED"  };


  return exports;
}));


