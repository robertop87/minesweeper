/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.GameConfigApi = factory(root.ApiDocumentation.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The GameConfigApi model module.
   * @module model/GameConfigApi
   * @version 1.0
   */

  /**
   * Constructs a new <code>GameConfigApi</code>.
   * @alias module:model/GameConfigApi
   * @class
   * @param boardSize {Number} The board size
   * @param initColumn {Number} The initial column position
   * @param initRow {Number} The initial row position
   * @param playerName {String} The player name
   */
  var exports = function(boardSize, initColumn, initRow, playerName) {
    var _this = this;

    _this['boardSize'] = boardSize;
    _this['initColumn'] = initColumn;
    _this['initRow'] = initRow;
    _this['playerName'] = playerName;
  };

  /**
   * Constructs a <code>GameConfigApi</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GameConfigApi} obj Optional instance to populate.
   * @return {module:model/GameConfigApi} The populated <code>GameConfigApi</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('boardSize')) {
        obj['boardSize'] = ApiClient.convertToType(data['boardSize'], 'Number');
      }
      if (data.hasOwnProperty('initColumn')) {
        obj['initColumn'] = ApiClient.convertToType(data['initColumn'], 'Number');
      }
      if (data.hasOwnProperty('initRow')) {
        obj['initRow'] = ApiClient.convertToType(data['initRow'], 'Number');
      }
      if (data.hasOwnProperty('playerName')) {
        obj['playerName'] = ApiClient.convertToType(data['playerName'], 'String');
      }
    }
    return obj;
  }

  /**
   * The board size
   * @member {Number} boardSize
   */
  exports.prototype['boardSize'] = undefined;
  /**
   * The initial column position
   * @member {Number} initColumn
   */
  exports.prototype['initColumn'] = undefined;
  /**
   * The initial row position
   * @member {Number} initRow
   */
  exports.prototype['initRow'] = undefined;
  /**
   * The player name
   * @member {String} playerName
   */
  exports.prototype['playerName'] = undefined;



  return exports;
}));


